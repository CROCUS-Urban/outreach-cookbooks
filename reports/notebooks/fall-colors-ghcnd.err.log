Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
station_data.hvplot.points(x='LONGITUDE',
                           y='LATITUDE',
                           rasterize=True,
                           geo=True,
                           features=['ocean', 'land', 'borders', 'lakes'],
                           projection=ccrs.PlateCarree(),
                           title='GHCNd Station Locations')
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
File [0;32m/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/hvplot/util.py:233[0m, in [0;36mprocess_crs[0;34m(crs)[0m
[1;32m    232[0m [38;5;28;01mimport[39;00m [38;5;21;01mcartopy[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcrs[39;00m [38;5;28;01mas[39;00m [38;5;21;01mccrs[39;00m
[0;32m--> 233[0m [38;5;28;01mimport[39;00m [38;5;21;01mgeoviews[39;00m [38;5;28;01mas[39;00m [38;5;21;01mgv[39;00m [38;5;66;03m# noqa[39;00m
[1;32m    234[0m [38;5;28;01mimport[39;00m [38;5;21;01mpyproj[39;00m

[0;31mModuleNotFoundError[0m: No module named 'geoviews'

During handling of the above exception, another exception occurred:

[0;31mImportError[0m                               Traceback (most recent call last)
Cell [0;32mIn[5], line 1[0m
[0;32m----> 1[0m [43mstation_data[49m[38;5;241;43m.[39;49m[43mhvplot[49m[38;5;241;43m.[39;49m[43mpoints[49m[43m([49m[43mx[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mLONGITUDE[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m      2[0m [43m                           [49m[43my[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mLATITUDE[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m      3[0m [43m                           [49m[43mrasterize[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m      4[0m [43m                           [49m[43mgeo[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m      5[0m [43m                           [49m[43mfeatures[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mocean[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mland[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mborders[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mlakes[39;49m[38;5;124;43m'[39;49m[43m][49m[43m,[49m
[1;32m      6[0m [43m                           [49m[43mprojection[49m[38;5;241;43m=[39;49m[43mccrs[49m[38;5;241;43m.[39;49m[43mPlateCarree[49m[43m([49m[43m)[49m[43m,[49m
[1;32m      7[0m [43m                           [49m[43mtitle[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mGHCNd Station Locations[39;49m[38;5;124;43m'[39;49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/hvplot/plotting/core.py:1626[0m, in [0;36mhvPlotTabular.points[0;34m(self, x, y, **kwds)[0m
[1;32m   1568[0m [38;5;28;01mdef[39;00m [38;5;21mpoints[39m([38;5;28mself[39m, x[38;5;241m=[39m[38;5;28;01mNone[39;00m, y[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwds):
[1;32m   1569[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m   1570[0m [38;5;124;03m    A `points` plot visualizes positions in a 2D space. This is useful for example for[39;00m
[1;32m   1571[0m [38;5;124;03m    geographic plots.[39;00m
[0;32m   (...)[0m
[1;32m   1624[0m [38;5;124;03m    - HoloViews: https://holoviews.org/reference/elements/bokeh/Points.html[39;00m
[1;32m   1625[0m [38;5;124;03m    """[39;00m
[0;32m-> 1626[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mpoints[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/hvplot/plotting/core.py:92[0m, in [0;36mhvPlotBase.__call__[0;34m(self, x, y, kind, **kwds)[0m
[1;32m     89[0m         plot [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_converter(x, y, kind, [38;5;241m*[39m[38;5;241m*[39mkwds)(kind, x, y)
[1;32m     90[0m         [38;5;28;01mreturn[39;00m pn[38;5;241m.[39mpanel(plot, [38;5;241m*[39m[38;5;241m*[39mpanel_dict)
[0;32m---> 92[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_converter[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mkind[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m(kind, x, y)

File [0;32m/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/hvplot/plotting/core.py:99[0m, in [0;36mhvPlotBase._get_converter[0;34m(self, x, y, kind, **kwds)[0m
[1;32m     97[0m y [38;5;241m=[39m y [38;5;129;01mor[39;00m params[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m     98[0m kind [38;5;241m=[39m kind [38;5;129;01mor[39;00m params[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124mkind[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[0;32m---> 99[0m [38;5;28;01mreturn[39;00m [43mHoloViewsConverter[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_data[49m[43m,[49m[43m [49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mkind[49m[38;5;241;43m=[39;49m[43mkind[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mparams[49m[43m)[49m

File [0;32m/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/hvplot/converter.py:397[0m, in [0;36mHoloViewsConverter.__init__[0;34m(self, data, x, y, kind, by, use_index, group_label, value_label, backlog, persist, use_dask, crs, fields, groupby, dynamic, grid, legend, rot, title, xlim, ylim, clim, symmetric, logx, logy, loglog, hover, subplots, label, invert, stacked, colorbar, datashade, rasterize, row, col, debug, framewise, aggregator, projection, global_extent, geo, precompute, flip_xaxis, flip_yaxis, dynspread, hover_cols, x_sampling, y_sampling, project, tools, attr_labels, coastline, tiles, sort_date, check_symmetric_max, transforms, stream, cnorm, features, rescale_discrete_levels, **kwds)[0m
[1;32m    395[0m [38;5;28mself[39m[38;5;241m.[39mdynamic [38;5;241m=[39m dynamic
[1;32m    396[0m [38;5;28mself[39m[38;5;241m.[39mgeo [38;5;241m=[39m [38;5;28many[39m([geo, crs, global_extent, projection, project, coastline, features])
[0;32m--> 397[0m [38;5;28mself[39m[38;5;241m.[39mcrs [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_process_crs[49m[43m([49m[43mdata[49m[43m,[49m[43m [49m[43mcrs[49m[43m)[49m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mgeo [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m
[1;32m    398[0m [38;5;28mself[39m[38;5;241m.[39mproject [38;5;241m=[39m project
[1;32m    399[0m [38;5;28mself[39m[38;5;241m.[39mcoastline [38;5;241m=[39m coastline

File [0;32m/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/hvplot/converter.py:651[0m, in [0;36mHoloViewsConverter._process_crs[0;34m(self, data, crs)[0m
[1;32m    648[0m     _crs [38;5;241m=[39m [38;5;28mgetattr[39m(data, [38;5;124m'[39m[38;5;124mattrs[39m[38;5;124m'[39m, {})[38;5;241m.[39mget(crs [38;5;129;01mor[39;00m [38;5;124m'[39m[38;5;124mcrs[39m[38;5;124m'[39m, crs)
[1;32m    650[0m [38;5;28;01mtry[39;00m:
[0;32m--> 651[0m     [38;5;28;01mreturn[39;00m [43mprocess_crs[49m[43m([49m[43m_crs[49m[43m)[49m
[1;32m    652[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m:
[1;32m    653[0m     [38;5;66;03m# only raise error if crs was specified in kwargs[39;00m
[1;32m    654[0m     [38;5;28;01mif[39;00m crs:

File [0;32m/usr/share/miniconda3/envs/cookbook-dev/lib/python3.10/site-packages/hvplot/util.py:236[0m, in [0;36mprocess_crs[0;34m(crs)[0m
[1;32m    234[0m     [38;5;28;01mimport[39;00m [38;5;21;01mpyproj[39;00m
[1;32m    235[0m [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m:
[0;32m--> 236[0m     [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m([38;5;124m'[39m[38;5;124mGeographic projection support requires geoviews, pyproj and cartopy.[39m[38;5;124m'[39m)
[1;32m    238[0m [38;5;28;01mif[39;00m crs [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    239[0m     [38;5;28;01mreturn[39;00m ccrs[38;5;241m.[39mPlateCarree()

[0;31mImportError[0m: Geographic projection support requires geoviews, pyproj and cartopy.

